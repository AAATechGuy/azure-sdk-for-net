parameters:
  Artifacts: []
  TestPipeline: false
  ArtifactName: 'not-specified'
  # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
  DevOpsFeedId: '29ec6040-b234-4e31-b139-33dc4287b756/fa8c16a3-dbe0-4de2-a297-03065ec1ba3f'
  TargetDocRepoOwner: 'not-specified'
  TargetDocRepoName: 'not-specified'
  Environment: nuget
stages:
  - stage: Signing
    dependsOn: ${{parameters.DependsOn}}
    jobs:
      - deployment: SignPackage
        environment: esrp
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: windows-2022

        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - download: current
                  artifact: ${{parameters.ArtifactName}}
                  timeoutInMinutes: 5

                - template: tools/clone-buildtools/clone-buildtools.yml@azure-sdk-build-tools

                - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
                  parameters:
                    PackagesPath:  $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                    BuildToolsPath: $(AzureSDKBuildToolsPath)

                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                  artifact: ${{parameters.ArtifactName}}-signed
                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'

  - ${{if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - ${{if ne(artifact.skipReleaseStage, 'true')}}:
        - stage:
          displayName: 'Release: ${{artifact.name}}'
          dependsOn: Signing
          condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-net-pr'))
          jobs:
            - ${{if ne(artifact.skipTagRepository, 'true')}}:
              - deployment: TagRepository
                displayName: "Create release tag"
                condition: ne(variables['Skip.TagRepository'], 'true')
                environment: ${{parameters.Environment}}

                pool:
                  name: azsdk-pool-mms-win-2022-general
                  vmImage: windows-2022

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: self
                        - download: current
                          artifact: ${{parameters.ArtifactName}}-signed
                        - template: /eng/pipelines/templates/steps/install-dotnet.yml
                          parameters:
                            EnableNuGetCache: false
                        - template: /eng/common/pipelines/templates/steps/retain-run.yml
                        - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
                          parameters:
                            PackageName: "Azure.Template"
                            ServiceDirectory: "template"
                            TestPipeline: ${{ parameters.TestPipeline }}
                        - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                          parameters:
                            PackageName: ${{artifact.name}}
                            ServiceName: ${{parameters.ServiceDirectory}}
                            ForRelease: true
                        - template: /eng/common/pipelines/templates/steps/verify-restapi-spec-location.yml
                          parameters:
                            PackageName: ${{artifact.name}}
                            ServiceDirectory: ${{parameters.ServiceDirectory}}
                            ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed
                        - task: PowerShell@2
                          inputs:
                            filePath: $(System.DefaultWorkingDirectory)/eng/scripts/InstallationCheck.ps1
                            pwsh: true
                            arguments: >
                              -ArtifactsDirectory "$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed"
                              -Artifact ${{artifact.name}}
                          condition: and(succeeded(),ne('${{ artifact.skipPublishPackage }}', 'true'))
                          displayName: Verify Package Installation