# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The SBOM tasks have been removed because they are not required for the unofficial template.
# You can manually enable SBOM in the unofficial template if needed, othewise its automatically enabled when using official template. https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sbom
# For .NET builds the only case we want to not have dev build numbers on our packages is when it is manually queued and
# the SetDevVersion property isn't set to true. All other cases should contain dev version numbers.
parameters:
- name: Artifacts
  type: object
  default: []
- name: TestPipeline
  type: boolean
  default: false
- name: ArtifactName
  type: string
  default: packages
- name: SDKType
  type: string
  default: all
- name: ServiceDirectory
  type: string
  default: not-specified
- name: BuildSnippets
  type: boolean
  default: true
- name: CheckAOTCompat
  type: boolean
  default: false
- name: AOTTestInputs
  type: object
  default: []
- name: TestSetupSteps
  type: stepList
  default: []
- name: TestTimeoutInMinutes
  type: number
- name: MatrixConfigs
  type: object
- name: AdditionalMatrixConfigs
  type: object
  default: []
- name: MatrixFilters
  type: object
  default: []
- name: MatrixReplace
  type: object
  default: []
- name: TestDependsOnDependency
  type: string
  default: not-specified
- name: LimitForPullRequest
  type: boolean
  default: false
jobs:
- job: Build
  templateContext:
    outputs:
    - output: pipelineArtifact
      displayName: 'Publish ${{ parameters.ArtifactName }} Artifacts'
      condition: and(succeeded(), ${{ parameters.CustomCondition }})
      artifactName: '${{ parameters.ArtifactName }}'
      targetPath: '${{ parameters.ArtifactPath }}'
    - output: pipelineArtifact
      displayName: 'Publish failed ${{ parameters.ArtifactName }} Artifacts'
      condition: and(failed(), ${{ parameters.CustomCondition }})
      artifactName: '${{ parameters.ArtifactName }}-FailedAttempt$(System.JobAttempt)'
      targetPath: '${{ parameters.ArtifactPath }}'
  variables:
    Codeql.Enabled: true
    Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
    Codeql.SkipTaskAutoInjection: false
  steps:
  - template: /eng/pipelines/templates/steps/install-dotnet.yml@self
  - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml@self
    parameters:
      PackageName: "Azure.Template"
      ServiceDirectory: "template"
      TestPipeline: ${{ parameters.TestPipeline }}
  - template: /eng/common/pipelines/templates/steps/set-default-branch.yml@self
  - pwsh: |
      echo "##vso[build.addbuildtag]Scheduled"
    displayName: "Tag scheduled builds"
    condition: and(eq(variables['Build.SourceBranchName'],variables['DefaultBranch']),eq(variables['Build.Reason'],'Schedule'))
  - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml@self
  - pwsh: |
      $skipDevBuildNumber = "false"
      # For .NET builds the only case we want to not have dev build numbers on our packages is when it is manually queued and
      # the SetDevVersion property isn't set to true. All other cases should contain dev version numbers.
      if ('$(Build.Reason)' -eq 'Manual' -and '$(SetDevVersion)' -ne 'true') {
        $skipDevBuildNumber = "true"
      }
      $versioningProperties = "/p:OfficialBuildId=$(OfficialBuildId) /p:SkipDevBuildNumber=$skipDevBuildNumber";
      echo "##vso[task.setvariable variable=VersioningProperties]$versioningProperties"
    displayName: "Setup .NET specific versioning properties"
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.9'
    inputs:
      versionSpec: '3.9'
  - template: /eng/pipelines/templates/steps/dotnet-diagnostics.yml@self
    parameters:
      LogFilePath: $(Build.ArtifactStagingDirectory)/pack.binlog
  - script: >-
      dotnet pack eng/service.proj -warnaserror /p:ValidateRunApiCompat=true /p:SDKType=${{ parameters.SDKType }} /p:ServiceDirectory=${{ parameters.ServiceDirectory }} /p:IncludeTests=false /p:PublicSign=false $(VersioningProperties) /p:Configuration=$(BuildConfiguration) /p:CommitSHA=$(Build.SourceVersion) /p:ArtifactsPackagesDir=$(Build.ArtifactStagingDirectory) $(DiagnosticArguments)
    displayName: "Build and Package"
  - task: Powershell@2
    inputs:
      filePath: $(Build.SourcesDirectory)/eng/common/scripts/Save-Package-Properties.ps1
      arguments: >
        -ServiceDirectory ${{parameters.ServiceDirectory}} -OutDirectory $(Build.ArtifactStagingDirectory)/PackageInfo -AddDevVersion:$$(SetDevVersion)
      pwsh: true
      workingDirectory: $(Pipeline.Workspace)
    displayName: Update package properties with dev version
  - template: /eng/common/pipelines/templates/steps/create-apireview.yml@self
    parameters:
      Artifacts: ${{parameters.Artifacts}}
  - template: /eng/pipelines/templates/steps/archetype-sdk-docs.yml@self
    parameters:
      ServiceDirectory: ${{parameters.ServiceDirectory}}
      Artifacts: ${{parameters.Artifacts}}
      DocGenerationDir: "$(Build.SourcesDirectory)/doc/ApiDocGeneration"
      LibType: 'client'
  - template: /eng/common/pipelines/templates/steps/publish-artifact.yml@self
    parameters:
      ArtifactPath: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'packages'
  - ${{if eq(variables['System.TeamProject'], 'internal') }}:
    - template: /eng/common/pipelines/templates/steps/publish-artifact.yml@self
      parameters:
        ArtifactPath: '$(Build.ArtifactStagingDirectory)/_manifest'
        ArtifactName: 'manifest'
  - template: /eng/common/pipelines/templates/steps/detect-api-changes.yml@self
    parameters:
      Artifacts: ${{ parameters.Artifacts }}
  - ${{ if eq(parameters.CheckAOTCompat, 'true') }}:
    - template: /eng/pipelines/templates/steps/aot-compatibility.yml@self
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        AOTTestInputs: ${{ parameters.AOTTestInputs }}
- job: "Analyze"
  timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
  condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], true))
  steps:
  - ${{ if not(contains(variables['Build.DefinitionName'], '-pr - ')) }}:
    - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml@self
      parameters:
        Paths:
        - "/*"
        - "!SessionRecords"
  - template: /eng/common/pipelines/templates/steps/cache-ps-modules.yml@self
  - template: /eng/common/pipelines/templates/steps/verify-samples.yml@self
    parameters:
      ServiceDirectory: ${{ parameters.ServiceDirectory }}
  - template: /eng/common/pipelines/templates/steps/verify-readme.yml@self
    parameters:
      ScanPath: $(Build.SourcesDirectory)/sdk/${{ parameters.ServiceDirectory }}
  - task: NodeTool@0
    inputs:
      versionSpec: 18.x
    displayName: 'Use Node 18.x'
  - template: /eng/pipelines/templates/steps/install-dotnet.yml@self
  - task: DotNetCoreCLI@2
    displayName: 'Install Snippet Generator Tool'
    inputs:
      command: custom
      custom: 'tool'
      arguments: 'restore'
      workingDirectory: '$(Agent.BuildDirectory)'
  - task: PowerShell@2
    displayName: "Verify generated code"
    env:
      EnableSourceLink: false
    inputs:
      filePath: "eng/scripts/CodeChecks.ps1"
      arguments: >
        -ServiceDirectory ${{ parameters.ServiceDirectory }} -SDKType ${{ parameters.SDKType }} -SpellCheckPublicApiSurface
      pwsh: true
      failOnStderr: false
  - script: >-
      dotnet build eng/service.proj -warnaserror /t:rebuild /p:DebugType=none /p:SDKType=${{ parameters.SDKType }} /p:ServiceDirectory=${{ parameters.ServiceDirectory }} /p:IncludePerf=false /p:IncludeStress=false /p:PublicSign=false /p:Configuration=$(BuildConfiguration) /p:EnableSourceLink=false /p:BuildSnippets=true
    displayName: Build snippets
    condition: and(succeeded(), eq(${{ parameters.BuildSnippets }}, true))
- ${{ if or(ne(variables['Build.Reason'], 'PullRequest'), ne(parameters.LimitForPullRequest, 'true')) }}:
  - job: Compliance
    steps:
    - task: UsePythonVersion@0
      displayName: "Use Python 3.9"
      inputs:
        versionSpec: "3.9"
    - template: /eng/common/pipelines/templates/steps/validate-filename.yml@self
    - template: /eng/common/pipelines/templates/steps/check-spelling.yml@self
    - template: /eng/common/pipelines/templates/steps/verify-links.yml@self
      parameters:
        ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
          Directory: ''
          Urls: (eng/common/scripts/get-markdown-files-from-changed-files.ps1)
        ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
          Directory: sdk/${{ parameters.ServiceDirectory }}
        CheckLinkGuidance: $true
    - template: /eng/common/pipelines/templates/steps/verify-path-length.yml@self
      parameters:
        SourceDirectory: $(Build.SourcesDirectory)
    - template: /eng/common/pipelines/templates/steps/eng-common-workflow-enforcer.yml@self
    - template: /eng/common/pipelines/templates/steps/credscan.yml@self
      parameters:
        BaselineFilePath: $(Build.sourcesdirectory)/eng/dotnet.gdnbaselines
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
  - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml@self
    parameters:
      GenerateJobName: generate_target_service_test_matrix
      JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml
      MatrixConfigs: ${{ parameters.MatrixConfigs }}
      MatrixFilters: ${{ parameters.MatrixFilters }}
      MatrixReplace: ${{ parameters.MatrixReplace }}
      CloudConfig:
        Cloud: public
      AdditionalParameters:
        SDKType: ${{ parameters.SDKType }}
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        TestSetupSteps: ${{ parameters.TestSetupSteps }}
        TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
  - ${{ if ne(parameters.TestDependsOnDependency, 'not-specified') }}:
    - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml@self
      parameters:
        GenerateJobName: generate_target_dependencies_test_matrix
        JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml
        MatrixConfigs: ${{ parameters.MatrixConfigs }}
        MatrixFilters: ${{ parameters.MatrixFilters }}
        MatrixReplace:
        - AdditionalTestArguments=\/p:UseProjectReferenceToAzureClients\=false/\/p:UseProjectReferenceToAzureClients\=true
        - ${{ each matrixReplace in parameters.MatrixReplace }}:
          - ${{ matrixReplace }}
        CloudConfig:
          Cloud: public
        SparseCheckoutPaths:
        - "/*"
        - "!/sdk/*/**/SessionRecords/*"
        PreGenerationSteps:
        - ${{ each config in parameters.MatrixConfigs }}:
          - template: /eng/pipelines/templates/steps/dependency.tests.yml
            parameters:
              TestDependsOnDependency: ${{ parameters.TestDependsOnDependency }}
              ProjectListOverrideFilePropertyName: 'ProjectListOverrideFile'
              ProjectFilesOutputFolder: $(Build.ArtifactStagingDirectory)
              ExcludeTargetTestProjects: true
              ServiceDirectory: ${{ parameters.ServiceDirectory }}
              MatrixConfigsFile: ${{ config.Path }}
        AdditionalParameters:
          SDKType: ${{ parameters.SDKType }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          TestSetupSteps: ${{ parameters.TestSetupSteps }}
          TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
          ProjectListOverrideFilePropertyName: 'ProjectListOverrideFile'