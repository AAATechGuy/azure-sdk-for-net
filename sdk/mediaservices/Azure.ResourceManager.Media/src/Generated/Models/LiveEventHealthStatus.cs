// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> Health status of last 20 seconds. </summary>
    public readonly partial struct LiveEventHealthStatus : IEquatable<LiveEventHealthStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LiveEventHealthStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LiveEventHealthStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ExcellentValue = "Excellent";
        private const string GoodValue = "Good";
        private const string PoorValue = "Poor";

        /// <summary> Incoming bitrate &gt;= 75% of target bitrate AND no Ingest warning and error AND ABS(IngestDrift) is equal to 0. </summary>
        public static LiveEventHealthStatus Excellent { get; } = new LiveEventHealthStatus(ExcellentValue);
        /// <summary> Incoming bitrate &gt;= 20% AND no Ingest Error or warning exception discontinuities which gap &lt; 10 seconds. </summary>
        public static LiveEventHealthStatus Good { get; } = new LiveEventHealthStatus(GoodValue);
        /// <summary> Otherwise. </summary>
        public static LiveEventHealthStatus Poor { get; } = new LiveEventHealthStatus(PoorValue);
        /// <summary> Determines if two <see cref="LiveEventHealthStatus"/> values are the same. </summary>
        public static bool operator ==(LiveEventHealthStatus left, LiveEventHealthStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LiveEventHealthStatus"/> values are not the same. </summary>
        public static bool operator !=(LiveEventHealthStatus left, LiveEventHealthStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LiveEventHealthStatus"/>. </summary>
        public static implicit operator LiveEventHealthStatus(string value) => new LiveEventHealthStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LiveEventHealthStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LiveEventHealthStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
