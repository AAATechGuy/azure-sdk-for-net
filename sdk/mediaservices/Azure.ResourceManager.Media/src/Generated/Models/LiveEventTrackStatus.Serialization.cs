// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class LiveEventTrackStatus
    {
        internal static LiveEventTrackStatus DeserializeLiveEventTrackStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> trackId = default;
            Optional<long> expectedBitrate = default;
            Optional<long> incomingBitrate = default;
            Optional<string> ingestDrift = default;
            Optional<long> requestReceived = default;
            Optional<long> requestSucceeded = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("trackId"u8))
                {
                    trackId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expectedBitrate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expectedBitrate = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("incomingBitrate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    incomingBitrate = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("ingestDrift"u8))
                {
                    ingestDrift = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("requestReceived"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    requestReceived = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("requestSucceeded"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    requestSucceeded = property.Value.GetInt64();
                    continue;
                }
            }
            return new LiveEventTrackStatus(trackId.Value, Optional.ToNullable(expectedBitrate), Optional.ToNullable(incomingBitrate), ingestDrift.Value, Optional.ToNullable(requestReceived), Optional.ToNullable(requestSucceeded));
        }
    }
}
