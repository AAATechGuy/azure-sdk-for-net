// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> The live event ingest interruption data. </summary>
    public partial class LiveEventIngestInterruption
    {
        /// <summary> Initializes a new instance of LiveEventIngestInterruption. </summary>
        internal LiveEventIngestInterruption()
        {
        }

        /// <summary> Initializes a new instance of LiveEventIngestInterruption. </summary>
        /// <param name="begin"> UTC time of interruption start, encoder disconnected. </param>
        /// <param name="end"> UTC time of interruption end, encoder re-connected. </param>
        /// <param name="duration"> Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes. </param>
        /// <param name="reason"> Interruption reason. </param>
        internal LiveEventIngestInterruption(DateTimeOffset? begin, DateTimeOffset? end, TimeSpan? duration, string reason)
        {
            Begin = begin;
            End = end;
            Duration = duration;
            Reason = reason;
        }

        /// <summary> UTC time of interruption start, encoder disconnected. </summary>
        public DateTimeOffset? Begin { get; }
        /// <summary> UTC time of interruption end, encoder re-connected. </summary>
        public DateTimeOffset? End { get; }
        /// <summary> Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes. </summary>
        public TimeSpan? Duration { get; }
        /// <summary> Interruption reason. </summary>
        public string Reason { get; }
    }
}
