// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Search;

namespace Azure.ResourceManager.Search.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmSearchModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.SearchServiceAdminKeyResult"/>. </summary>
        /// <param name="primaryKey"> The primary admin API key of the search service. </param>
        /// <param name="secondaryKey"> The secondary admin API key of the search service. </param>
        /// <returns> A new <see cref="Models.SearchServiceAdminKeyResult"/> instance for mocking. </returns>
        public static SearchServiceAdminKeyResult SearchServiceAdminKeyResult(string primaryKey = null, string secondaryKey = null)
        {
            return new SearchServiceAdminKeyResult(primaryKey, secondaryKey);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SearchServiceQueryKey"/>. </summary>
        /// <param name="name"> The name of the query API key; may be empty. </param>
        /// <param name="key"> The value of the query API key. </param>
        /// <returns> A new <see cref="Models.SearchServiceQueryKey"/> instance for mocking. </returns>
        public static SearchServiceQueryKey SearchServiceQueryKey(string name = null, string key = null)
        {
            return new SearchServiceQueryKey(name, key);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SearchEncryptionWithCmk"/>. </summary>
        /// <param name="enforcement"> Describes how a search service should enforce having one or more non customer encrypted resources. </param>
        /// <param name="encryptionComplianceStatus"> Describes whether the search service is compliant or not with respect to having non customer encrypted resources. If a service has more than one non customer encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'. </param>
        /// <returns> A new <see cref="Models.SearchEncryptionWithCmk"/> instance for mocking. </returns>
        public static SearchEncryptionWithCmk SearchEncryptionWithCmk(SearchEncryptionWithCmkEnforcement? enforcement = null, SearchEncryptionComplianceStatus? encryptionComplianceStatus = null)
        {
            return new SearchEncryptionWithCmk(enforcement, encryptionComplianceStatus);
        }

        /// <summary> Initializes a new instance of <see cref="Search.SearchPrivateEndpointConnectionData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service. </param>
        /// <returns> A new <see cref="Search.SearchPrivateEndpointConnectionData"/> instance for mocking. </returns>
        public static SearchPrivateEndpointConnectionData SearchPrivateEndpointConnectionData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SearchServicePrivateEndpointConnectionProperties properties = null)
        {
            return new SearchPrivateEndpointConnectionData(id, name, resourceType, systemData, properties);
        }

        /// <summary> Initializes a new instance of <see cref="Search.SharedSearchServicePrivateLinkResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service. </param>
        /// <returns> A new <see cref="Search.SharedSearchServicePrivateLinkResourceData"/> instance for mocking. </returns>
        public static SharedSearchServicePrivateLinkResourceData SharedSearchServicePrivateLinkResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SharedSearchServicePrivateLinkResourceProperties properties = null)
        {
            return new SharedSearchServicePrivateLinkResourceData(id, name, resourceType, systemData, properties);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SearchPrivateLinkResource"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Describes the properties of a supported private link resource for the Azure Cognitive Search service. </param>
        /// <returns> A new <see cref="Models.SearchPrivateLinkResource"/> instance for mocking. </returns>
        public static SearchPrivateLinkResource SearchPrivateLinkResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SearchPrivateLinkResourceProperties properties = null)
        {
            return new SearchPrivateLinkResource(id, name, resourceType, systemData, properties);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SearchPrivateLinkResourceProperties"/>. </summary>
        /// <param name="groupId"> The group ID of the private link resource. </param>
        /// <param name="requiredMembers"> The list of required members of the private link resource. </param>
        /// <param name="requiredZoneNames"> The list of required DNS zone names of the private link resource. </param>
        /// <param name="shareablePrivateLinkResourceTypes"> The list of resources that are onboarded to private link service, that are supported by Azure Cognitive Search. </param>
        /// <returns> A new <see cref="Models.SearchPrivateLinkResourceProperties"/> instance for mocking. </returns>
        public static SearchPrivateLinkResourceProperties SearchPrivateLinkResourceProperties(string groupId = null, IEnumerable<string> requiredMembers = null, IEnumerable<string> requiredZoneNames = null, IEnumerable<ShareableSearchServicePrivateLinkResourceType> shareablePrivateLinkResourceTypes = null)
        {
            requiredMembers ??= new List<string>();
            requiredZoneNames ??= new List<string>();
            shareablePrivateLinkResourceTypes ??= new List<ShareableSearchServicePrivateLinkResourceType>();

            return new SearchPrivateLinkResourceProperties(groupId, requiredMembers?.ToList(), requiredZoneNames?.ToList(), shareablePrivateLinkResourceTypes?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareableSearchServicePrivateLinkResourceType"/>. </summary>
        /// <param name="name"> The name of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search. </param>
        /// <param name="properties"> Describes the properties of a resource type that has been onboarded to private link service, supported by Azure Cognitive Search. </param>
        /// <returns> A new <see cref="Models.ShareableSearchServicePrivateLinkResourceType"/> instance for mocking. </returns>
        public static ShareableSearchServicePrivateLinkResourceType ShareableSearchServicePrivateLinkResourceType(string name = null, ShareableSearchServicePrivateLinkResourceProperties properties = null)
        {
            return new ShareableSearchServicePrivateLinkResourceType(name, properties);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareableSearchServicePrivateLinkResourceProperties"/>. </summary>
        /// <param name="shareablePrivateLinkResourcePropertiesType"> The resource provider type for the resource that has been onboarded to private link service, supported by Azure Cognitive Search. </param>
        /// <param name="groupId"> The resource provider group id for the resource that has been onboarded to private link service, supported by Azure Cognitive Search. </param>
        /// <param name="description"> The description of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search. </param>
        /// <returns> A new <see cref="Models.ShareableSearchServicePrivateLinkResourceProperties"/> instance for mocking. </returns>
        public static ShareableSearchServicePrivateLinkResourceProperties ShareableSearchServicePrivateLinkResourceProperties(string shareablePrivateLinkResourcePropertiesType = null, string groupId = null, string description = null)
        {
            return new ShareableSearchServicePrivateLinkResourceProperties(shareablePrivateLinkResourcePropertiesType, groupId, description);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SearchServiceNameAvailabilityResult"/>. </summary>
        /// <param name="isNameAvailable"> A value indicating whether the name is available. </param>
        /// <param name="reason"> The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore unavailable. </param>
        /// <param name="message"> A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid' is returned in the 'reason' property. </param>
        /// <returns> A new <see cref="Models.SearchServiceNameAvailabilityResult"/> instance for mocking. </returns>
        public static SearchServiceNameAvailabilityResult SearchServiceNameAvailabilityResult(bool? isNameAvailable = null, SearchServiceNameUnavailableReason? reason = null, string message = null)
        {
            return new SearchServiceNameAvailabilityResult(isNameAvailable, reason, message);
        }

        /// <summary> Initializes a new instance of <see cref="Models.QuotaUsageResult"/>. </summary>
        /// <param name="id"> The resource id of the quota usage sku endpoint for Microsoft.Search provider. </param>
        /// <param name="unit"> The unit of measurement for the search sku. </param>
        /// <param name="currentValue"> The currently used up value for the particular search sku. </param>
        /// <param name="limit"> The quota limit for the particular search sku. </param>
        /// <param name="name"> The name of the sku supported by Azure Cognitive Search. </param>
        /// <returns> A new <see cref="Models.QuotaUsageResult"/> instance for mocking. </returns>
        public static QuotaUsageResult QuotaUsageResult(ResourceIdentifier id = null, string unit = null, int? currentValue = null, int? limit = null, QuotaUsageResultName name = null)
        {
            return new QuotaUsageResult(id, unit, currentValue, limit, name);
        }

        /// <summary> Initializes a new instance of <see cref="Models.QuotaUsageResultName"/>. </summary>
        /// <param name="value"> The sku name supported by Azure Cognitive Search. </param>
        /// <param name="localizedValue"> The localized string value for the sku supported by Azure Cognitive Search. </param>
        /// <returns> A new <see cref="Models.QuotaUsageResultName"/> instance for mocking. </returns>
        public static QuotaUsageResultName QuotaUsageResultName(string value = null, string localizedValue = null)
        {
            return new QuotaUsageResultName(value, localizedValue);
        }
    }
}
