// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary> The ResourceTypeExtensionOptionType. </summary>
    public readonly partial struct ResourceTypeExtensionOptionType : IEquatable<ResourceTypeExtensionOptionType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ResourceTypeExtensionOptionType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ResourceTypeExtensionOptionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string DoNotMergeExistingReadOnlyAndSecretPropertiesValue = "DoNotMergeExistingReadOnlyAndSecretProperties";
        private const string IncludeInternalMetadataValue = "IncludeInternalMetadata";

        /// <summary> NotSpecified. </summary>
        public static ResourceTypeExtensionOptionType NotSpecified { get; } = new ResourceTypeExtensionOptionType(NotSpecifiedValue);
        /// <summary> DoNotMergeExistingReadOnlyAndSecretProperties. </summary>
        public static ResourceTypeExtensionOptionType DoNotMergeExistingReadOnlyAndSecretProperties { get; } = new ResourceTypeExtensionOptionType(DoNotMergeExistingReadOnlyAndSecretPropertiesValue);
        /// <summary> IncludeInternalMetadata. </summary>
        public static ResourceTypeExtensionOptionType IncludeInternalMetadata { get; } = new ResourceTypeExtensionOptionType(IncludeInternalMetadataValue);
        /// <summary> Determines if two <see cref="ResourceTypeExtensionOptionType"/> values are the same. </summary>
        public static bool operator ==(ResourceTypeExtensionOptionType left, ResourceTypeExtensionOptionType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ResourceTypeExtensionOptionType"/> values are not the same. </summary>
        public static bool operator !=(ResourceTypeExtensionOptionType left, ResourceTypeExtensionOptionType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ResourceTypeExtensionOptionType"/>. </summary>
        public static implicit operator ResourceTypeExtensionOptionType(string value) => new ResourceTypeExtensionOptionType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ResourceTypeExtensionOptionType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ResourceTypeExtensionOptionType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
