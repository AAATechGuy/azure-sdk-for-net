// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.Compute.Models
{
    internal partial class SoftDeletePolicy : IUtf8JsonSerializable, IJsonModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsSoftDeleteEnabled))
            {
                writer.WritePropertyName("isSoftDeleteEnabled"u8);
                writer.WriteBooleanValue(IsSoftDeleteEnabled.Value);
            }
            writer.WriteEndObject();
        }

        object IJsonModelSerializable.Deserialize(ref Utf8JsonReader reader, ModelSerializerOptions options) => throw new NotImplementedException();

        void IJsonModelSerializable.Serialize(Utf8JsonWriter writer, ModelSerializerOptions options) => ((IUtf8JsonSerializable)this).Write(writer);

        object IModelSerializable.Deserialize(BinaryData data, ModelSerializerOptions options) => throw new NotImplementedException();

        internal static SoftDeletePolicy DeserializeSoftDeletePolicy(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> isSoftDeleteEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isSoftDeleteEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isSoftDeleteEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new SoftDeletePolicy(Optional.ToNullable(isSoftDeleteEnabled));
        }
    }
}
