<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetProjectAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response<Project> response = await client.GetProjectAsync("<projectName>");
]]></code>
This sample shows how to call GetProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response<Project> response = await client.GetProjectAsync("<projectName>");
]]></code></example>
    </member>
    <member name="GetProject(string,CancellationToken)">
      <example>
This sample shows how to call GetProject.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response<Project> response = client.GetProject("<projectName>");
]]></code>
This sample shows how to call GetProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response<Project> response = client.GetProject("<projectName>");
]]></code></example>
    </member>
    <member name="GetProjectAsync(string,RequestContext)">
      <example>
This sample shows how to call GetProjectAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response response = await client.GetProjectAsync("<projectName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetProjectAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response response = await client.GetProjectAsync("<projectName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("maxDevBoxesPerUser").ToString());
]]></code></example>
    </member>
    <member name="GetProject(string,RequestContext)">
      <example>
This sample shows how to call GetProject and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response response = client.GetProject("<projectName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetProject with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

Response response = client.GetProject("<projectName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("maxDevBoxesPerUser").ToString());
]]></code></example>
    </member>
    <member name="GetProjectsAsync(string,int,CancellationToken)">
      <example>
This sample shows how to call GetProjectsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (Project item in client.GetProjectsAsync("<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetProjectsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (Project item in client.GetProjectsAsync("<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetProjects(string,int,CancellationToken)">
      <example>
This sample shows how to call GetProjects.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (Project item in client.GetProjects("<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetProjects with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (Project item in client.GetProjects("<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetProjectsAsync(string,int,RequestContext)">
      <example>
This sample shows how to call GetProjectsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetProjectsAsync("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetProjectsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetProjectsAsync("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("maxDevBoxesPerUser").ToString());
}
]]></code></example>
    </member>
    <member name="GetProjects(string,int,RequestContext)">
      <example>
This sample shows how to call GetProjects and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetProjects("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetProjects with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetProjects("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("description").ToString());
    Console.WriteLine(result[0].GetProperty("maxDevBoxesPerUser").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesAsync(string,int,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesAsync("<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetAllDevBoxesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesAsync("<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxes(string,int,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxes.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxes("<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetAllDevBoxes with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxes("<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesAsync(string,int,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesAsync("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
}
]]></code>
This sample shows how to call GetAllDevBoxesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesAsync("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("projectName").ToString());
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
    Console.WriteLine(result[0].GetProperty("hibernateSupport").ToString());
    Console.WriteLine(result[0].GetProperty("provisioningState").ToString());
    Console.WriteLine(result[0].GetProperty("actionState").ToString());
    Console.WriteLine(result[0].GetProperty("powerState").ToString());
    Console.WriteLine(result[0].GetProperty("uniqueId").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("location").ToString());
    Console.WriteLine(result[0].GetProperty("osType").ToString());
    Console.WriteLine(result[0].GetProperty("user").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("skuName").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("vCPUs").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("memoryGB").ToString());
    Console.WriteLine(result[0].GetProperty("storageProfile").GetProperty("osDisk").GetProperty("diskSizeGB").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("version").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("operatingSystem").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("osBuildNumber").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("publishedDate").ToString());
    Console.WriteLine(result[0].GetProperty("createdTime").ToString());
    Console.WriteLine(result[0].GetProperty("localAdministrator").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxes(string,int,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxes("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
}
]]></code>
This sample shows how to call GetAllDevBoxes with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxes("<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("projectName").ToString());
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
    Console.WriteLine(result[0].GetProperty("hibernateSupport").ToString());
    Console.WriteLine(result[0].GetProperty("provisioningState").ToString());
    Console.WriteLine(result[0].GetProperty("actionState").ToString());
    Console.WriteLine(result[0].GetProperty("powerState").ToString());
    Console.WriteLine(result[0].GetProperty("uniqueId").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("location").ToString());
    Console.WriteLine(result[0].GetProperty("osType").ToString());
    Console.WriteLine(result[0].GetProperty("user").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("skuName").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("vCPUs").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("memoryGB").ToString());
    Console.WriteLine(result[0].GetProperty("storageProfile").GetProperty("osDisk").GetProperty("diskSizeGB").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("version").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("operatingSystem").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("osBuildNumber").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("publishedDate").ToString());
    Console.WriteLine(result[0].GetProperty("createdTime").ToString());
    Console.WriteLine(result[0].GetProperty("localAdministrator").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUserAsync(string,string,int,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesByUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesByUserAsync("<userId>", "<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetAllDevBoxesByUserAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesByUserAsync("<userId>", "<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUser(string,string,int,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesByUser.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxesByUser("<userId>", "<filter>", 1234))
{
}
]]></code>
This sample shows how to call GetAllDevBoxesByUser with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxesByUser("<userId>", "<filter>", 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUserAsync(string,string,int,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesByUserAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesByUserAsync("<userId>", "<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
}
]]></code>
This sample shows how to call GetAllDevBoxesByUserAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesByUserAsync("<userId>", "<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("projectName").ToString());
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
    Console.WriteLine(result[0].GetProperty("hibernateSupport").ToString());
    Console.WriteLine(result[0].GetProperty("provisioningState").ToString());
    Console.WriteLine(result[0].GetProperty("actionState").ToString());
    Console.WriteLine(result[0].GetProperty("powerState").ToString());
    Console.WriteLine(result[0].GetProperty("uniqueId").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("location").ToString());
    Console.WriteLine(result[0].GetProperty("osType").ToString());
    Console.WriteLine(result[0].GetProperty("user").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("skuName").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("vCPUs").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("memoryGB").ToString());
    Console.WriteLine(result[0].GetProperty("storageProfile").GetProperty("osDisk").GetProperty("diskSizeGB").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("version").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("operatingSystem").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("osBuildNumber").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("publishedDate").ToString());
    Console.WriteLine(result[0].GetProperty("createdTime").ToString());
    Console.WriteLine(result[0].GetProperty("localAdministrator").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUser(string,string,int,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesByUser and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxesByUser("<userId>", "<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
}
]]></code>
This sample shows how to call GetAllDevBoxesByUser with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevCenterClient client = new DevCenterClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxesByUser("<userId>", "<filter>", 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("projectName").ToString());
    Console.WriteLine(result[0].GetProperty("poolName").ToString());
    Console.WriteLine(result[0].GetProperty("hibernateSupport").ToString());
    Console.WriteLine(result[0].GetProperty("provisioningState").ToString());
    Console.WriteLine(result[0].GetProperty("actionState").ToString());
    Console.WriteLine(result[0].GetProperty("powerState").ToString());
    Console.WriteLine(result[0].GetProperty("uniqueId").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result[0].GetProperty("location").ToString());
    Console.WriteLine(result[0].GetProperty("osType").ToString());
    Console.WriteLine(result[0].GetProperty("user").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("skuName").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("vCPUs").ToString());
    Console.WriteLine(result[0].GetProperty("hardwareProfile").GetProperty("memoryGB").ToString());
    Console.WriteLine(result[0].GetProperty("storageProfile").GetProperty("osDisk").GetProperty("diskSizeGB").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("name").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("version").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("operatingSystem").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("osBuildNumber").ToString());
    Console.WriteLine(result[0].GetProperty("imageReference").GetProperty("publishedDate").ToString());
    Console.WriteLine(result[0].GetProperty("createdTime").ToString());
    Console.WriteLine(result[0].GetProperty("localAdministrator").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>