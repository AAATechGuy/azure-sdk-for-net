// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.OpenAI.Inference.Models
{
    /// <summary> The Embedding. </summary>
    public partial class Embedding
    {
        /// <summary> Initializes a new instance of Embedding. </summary>
        /// <param name="object"></param>
        /// <param name="embeddingFloat"></param>
        /// <param name="index"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="object"/> or <paramref name="embeddingFloat"/> is null. </exception>
        internal Embedding(string @object, IEnumerable<float> embeddingFloat, int index)
        {
            Argument.AssertNotNull(@object, nameof(@object));
            Argument.AssertNotNull(embeddingFloat, nameof(embeddingFloat));

            Object = @object;
            EmbeddingFloat = embeddingFloat.ToList();
            Index = index;
        }

        /// <summary> Initializes a new instance of Embedding. </summary>
        /// <param name="object"></param>
        /// <param name="embeddingFloat"></param>
        /// <param name="index"></param>
        internal Embedding(string @object, IReadOnlyList<float> embeddingFloat, int index)
        {
            Object = @object;
            EmbeddingFloat = embeddingFloat.ToList();
            Index = index;
        }

        /// <summary> Gets the object. </summary>
        public string Object { get; }
        /// <summary> Gets the embedding float. </summary>
        public IReadOnlyList<float> EmbeddingFloat { get; }
        /// <summary> Gets the index. </summary>
        public int Index { get; }
    }
}
