// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Communication.JobRouter
{
    /// <summary> Describes how this intent parameter is used during escalation. </summary>
    public partial class EscalationOptions
    {
        /// <summary> Initializes a new instance of EscalationOptions. </summary>
        public EscalationOptions()
        {
        }

        /// <summary> Initializes a new instance of EscalationOptions. </summary>
        /// <param name="required"> Determines whether this parameter will be required when escalating. Setting this will take priority over the Preferred flag. </param>
        /// <param name="requiredForSeconds"> When Required is set to true, this controls how long this parameter will be required for in seconds. </param>
        /// <param name="preferred"> Prefer an escalation target with this parameter, but not mandatory. </param>
        /// <param name="targetName"> Overrides the name of this parameter when finding an escalation target. </param>
        internal EscalationOptions(bool? required, int? requiredForSeconds, bool? preferred, string targetName)
        {
            Required = required;
            RequiredForSeconds = requiredForSeconds;
            Preferred = preferred;
            TargetName = targetName;
        }

        /// <summary> Determines whether this parameter will be required when escalating. Setting this will take priority over the Preferred flag. </summary>
        public bool? Required { get; set; }
        /// <summary> When Required is set to true, this controls how long this parameter will be required for in seconds. </summary>
        public int? RequiredForSeconds { get; set; }
        /// <summary> Prefer an escalation target with this parameter, but not mandatory. </summary>
        public bool? Preferred { get; set; }
        /// <summary> Overrides the name of this parameter when finding an escalation target. </summary>
        public string TargetName { get; set; }
    }
}
