// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    public partial class EscalationOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Required))
            {
                writer.WritePropertyName("required"u8);
                writer.WriteBooleanValue(Required.Value);
            }
            if (Optional.IsDefined(RequiredForSeconds))
            {
                writer.WritePropertyName("requiredForSeconds"u8);
                writer.WriteNumberValue(RequiredForSeconds.Value);
            }
            if (Optional.IsDefined(Preferred))
            {
                writer.WritePropertyName("preferred"u8);
                writer.WriteBooleanValue(Preferred.Value);
            }
            if (Optional.IsDefined(TargetName))
            {
                writer.WritePropertyName("targetName"u8);
                writer.WriteStringValue(TargetName);
            }
            writer.WriteEndObject();
        }

        internal static EscalationOptions DeserializeEscalationOptions(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> required = default;
            Optional<int> requiredForSeconds = default;
            Optional<bool> preferred = default;
            Optional<string> targetName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("required"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    required = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("requiredForSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    requiredForSeconds = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("preferred"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preferred = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("targetName"u8))
                {
                    targetName = property.Value.GetString();
                    continue;
                }
            }
            return new EscalationOptions(Optional.ToNullable(required), Optional.ToNullable(requiredForSeconds), Optional.ToNullable(preferred), targetName.Value);
        }
    }
}
