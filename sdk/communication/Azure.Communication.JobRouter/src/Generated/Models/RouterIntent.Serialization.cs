// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Communication.SkillsRegistry;
using Azure.Core;

namespace Azure.Communication.JobRouter
{
    public partial class RouterIntent : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Parameters))
            {
                writer.WritePropertyName("parameters"u8);
                writer.WriteStartObject();
                foreach (var item in Parameters)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(EscalationQueueId))
            {
                writer.WritePropertyName("escalationQueueId"u8);
                writer.WriteStringValue(EscalationQueueId);
            }
            if (Optional.IsDefined(AnalyzeSentiment))
            {
                writer.WritePropertyName("analyzeSentiment"u8);
                writer.WriteBooleanValue(AnalyzeSentiment.Value);
            }
            if (Optional.IsDefined(SummarizeConversation))
            {
                writer.WritePropertyName("summarizeConversation"u8);
                writer.WriteBooleanValue(SummarizeConversation.Value);
            }
            if (Optional.IsDefined(DetectEscalation))
            {
                writer.WritePropertyName("detectEscalation"u8);
                writer.WriteBooleanValue(DetectEscalation.Value);
            }
            writer.WriteEndObject();
        }

        internal static RouterIntent DeserializeRouterIntent(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> id = default;
            Optional<IDictionary<string, IntentParameter>> parameters = default;
            Optional<string> description = default;
            Optional<string> escalationQueueId = default;
            Optional<bool> analyzeSentiment = default;
            Optional<bool> summarizeConversation = default;
            Optional<bool> detectEscalation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("parameters"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, IntentParameter> dictionary = new Dictionary<string, IntentParameter>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, IntentParameter.DeserializeIntentParameter(property0.Value));
                    }
                    parameters = dictionary;
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("escalationQueueId"u8))
                {
                    escalationQueueId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("analyzeSentiment"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    analyzeSentiment = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("summarizeConversation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    summarizeConversation = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("detectEscalation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    detectEscalation = property.Value.GetBoolean();
                    continue;
                }
            }
            return new RouterIntent(id.Value, Optional.ToDictionary(parameters), description.Value, escalationQueueId.Value, Optional.ToNullable(analyzeSentiment), Optional.ToNullable(summarizeConversation), Optional.ToNullable(detectEscalation));
        }
    }
}
