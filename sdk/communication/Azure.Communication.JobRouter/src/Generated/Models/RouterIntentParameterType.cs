// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.JobRouter
{
    /// <summary> The data type of this parameter. </summary>
    public readonly partial struct RouterIntentParameterType : IEquatable<RouterIntentParameterType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RouterIntentParameterType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RouterIntentParameterType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StringValue = "string";
        private const string IntegerValue = "integer";
        private const string BooleanValue = "boolean";
        private const string DecimalValue = "decimal";

        /// <summary> string. </summary>
        public static RouterIntentParameterType String { get; } = new RouterIntentParameterType(StringValue);
        /// <summary> integer. </summary>
        public static RouterIntentParameterType Integer { get; } = new RouterIntentParameterType(IntegerValue);
        /// <summary> boolean. </summary>
        public static RouterIntentParameterType Boolean { get; } = new RouterIntentParameterType(BooleanValue);
        /// <summary> decimal. </summary>
        public static RouterIntentParameterType Decimal { get; } = new RouterIntentParameterType(DecimalValue);
        /// <summary> Determines if two <see cref="RouterIntentParameterType"/> values are the same. </summary>
        public static bool operator ==(RouterIntentParameterType left, RouterIntentParameterType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RouterIntentParameterType"/> values are not the same. </summary>
        public static bool operator !=(RouterIntentParameterType left, RouterIntentParameterType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RouterIntentParameterType"/>. </summary>
        public static implicit operator RouterIntentParameterType(string value) => new RouterIntentParameterType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RouterIntentParameterType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RouterIntentParameterType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
