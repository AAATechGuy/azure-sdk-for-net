// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Communication.Messaging;

namespace Azure.Communication.Messaging.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class CommunicationNotificationModelFactory
    {
        /// <summary> Initializes a new instance of SendMessageResponse. </summary>
        /// <param name="result"> The message id. </param>
        /// <returns> A new <see cref="Messaging.SendMessageResponse"/> instance for mocking. </returns>
        public static SendMessageResponse SendMessageResponse(IEnumerable<SendMessageResult> result = null)
        {
            result ??= new List<SendMessageResult>();

            return new SendMessageResponse(result?.ToList());
        }

        /// <summary> Initializes a new instance of SendMessageResult. </summary>
        /// <param name="id"> The message id. </param>
        /// <param name="status"> Status of a message. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        /// <returns> A new <see cref="Messaging.SendMessageResult"/> instance for mocking. </returns>
        public static SendMessageResult SendMessageResult(string id = null, MessageStatus status = default)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }

            return new SendMessageResult(id, status);
        }
    }
}
