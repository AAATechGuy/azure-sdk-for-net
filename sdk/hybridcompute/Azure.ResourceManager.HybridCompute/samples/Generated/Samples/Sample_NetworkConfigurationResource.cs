// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.HybridCompute;

namespace Azure.ResourceManager.HybridCompute.Samples
{
    public partial class Sample_NetworkConfigurationResource
    {
        // NetworkConfigurationsGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_NetworkConfigurationsGet()
        {
            // Generated from example definition: specification/hybridcompute/resource-manager/Microsoft.HybridCompute/preview/2023-10-03-preview/examples/networkConfiguration/NetworkConfigurationsGet.json
            // this example is just showing the usage of "NetworkConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkConfigurationResource created on azure
            // for more information of creating NetworkConfigurationResource, please refer to the document of NetworkConfigurationResource
            string resourceUri = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine";
            ResourceIdentifier networkConfigurationResourceId = NetworkConfigurationResource.CreateResourceIdentifier(resourceUri);
            NetworkConfigurationResource networkConfiguration = client.GetNetworkConfigurationResource(networkConfigurationResourceId);

            // invoke the operation
            NetworkConfigurationResource result = await networkConfiguration.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // NetworkConfigurationsCreate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_NetworkConfigurationsCreate()
        {
            // Generated from example definition: specification/hybridcompute/resource-manager/Microsoft.HybridCompute/preview/2023-10-03-preview/examples/networkConfiguration/NetworkConfigurationsCreate.json
            // this example is just showing the usage of "NetworkConfigurations_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkConfigurationResource created on azure
            // for more information of creating NetworkConfigurationResource, please refer to the document of NetworkConfigurationResource
            string resourceUri = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine";
            ResourceIdentifier networkConfigurationResourceId = NetworkConfigurationResource.CreateResourceIdentifier(resourceUri);
            NetworkConfigurationResource networkConfiguration = client.GetNetworkConfigurationResource(networkConfigurationResourceId);

            // invoke the operation
            NetworkConfigurationData data = new NetworkConfigurationData()
            {
                Location = new AzureLocation("westus"),
                NetworkConfigurationScopeResourceId = new ResourceIdentifier("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/privateLinkScopes/testScope"),
            };
            ArmOperation<NetworkConfigurationResource> lro = await networkConfiguration.CreateOrUpdateAsync(WaitUntil.Completed, data);
            NetworkConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // NetworkConfigurationsUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_NetworkConfigurationsUpdate()
        {
            // Generated from example definition: specification/hybridcompute/resource-manager/Microsoft.HybridCompute/preview/2023-10-03-preview/examples/networkConfiguration/NetworkConfigurationsUpdate.json
            // this example is just showing the usage of "NetworkConfigurations_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkConfigurationResource created on azure
            // for more information of creating NetworkConfigurationResource, please refer to the document of NetworkConfigurationResource
            string resourceUri = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine";
            ResourceIdentifier networkConfigurationResourceId = NetworkConfigurationResource.CreateResourceIdentifier(resourceUri);
            NetworkConfigurationResource networkConfiguration = client.GetNetworkConfigurationResource(networkConfigurationResourceId);

            // invoke the operation
            NetworkConfigurationData data = new NetworkConfigurationData()
            {
                NetworkConfigurationScopeResourceId = new ResourceIdentifier("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/privateLinkScopes/testScope"),
            };
            ArmOperation<NetworkConfigurationResource> lro = await networkConfiguration.CreateOrUpdateAsync(WaitUntil.Completed, data);
            NetworkConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // NetworkConfigurationsPatch
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_NetworkConfigurationsPatch()
        {
            // Generated from example definition: specification/hybridcompute/resource-manager/Microsoft.HybridCompute/preview/2023-10-03-preview/examples/networkConfiguration/NetworkConfigurationsPatch.json
            // this example is just showing the usage of "NetworkConfigurations_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkConfigurationResource created on azure
            // for more information of creating NetworkConfigurationResource, please refer to the document of NetworkConfigurationResource
            string resourceUri = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine";
            ResourceIdentifier networkConfigurationResourceId = NetworkConfigurationResource.CreateResourceIdentifier(resourceUri);
            NetworkConfigurationResource networkConfiguration = client.GetNetworkConfigurationResource(networkConfigurationResourceId);

            // invoke the operation
            NetworkConfigurationData data = new NetworkConfigurationData()
            {
                NetworkConfigurationScopeResourceId = new ResourceIdentifier("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/privateLinkScopes/testScope"),
            };
            NetworkConfigurationResource result = await networkConfiguration.UpdateAsync(data);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
