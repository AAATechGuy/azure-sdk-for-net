// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Details on issues that occurred during provisioning. </summary>
    public partial class HybridComputeProvisioningIssue
    {
        /// <summary> Initializes a new instance of <see cref="HybridComputeProvisioningIssue"/>. </summary>
        internal HybridComputeProvisioningIssue()
        {
            SuggestedResourceIds = new ChangeTrackingList<ResourceIdentifier>();
            SuggestedAccessRules = new ChangeTrackingList<HybridComputeAccessRule>();
        }

        /// <summary> Initializes a new instance of <see cref="HybridComputeProvisioningIssue"/>. </summary>
        /// <param name="name"> Name of the provisioning issue. </param>
        /// <param name="issueType"> Issue type. </param>
        /// <param name="severity"> Severity of the provisioning issue. </param>
        /// <param name="description"> Description of the provisioning issue. </param>
        /// <param name="suggestedResourceIds"> ARM Ids of the resources that can be associated to the same perimeter to remediate the issue. </param>
        /// <param name="suggestedAccessRules"> Access rules that can be added to the perimeter to remediate the issue. </param>
        internal HybridComputeProvisioningIssue(string name, HybridComputeProvisioningIssueType? issueType, HybridComputeProvisioningIssueSeverity? severity, string description, IReadOnlyList<ResourceIdentifier> suggestedResourceIds, IReadOnlyList<HybridComputeAccessRule> suggestedAccessRules)
        {
            Name = name;
            IssueType = issueType;
            Severity = severity;
            Description = description;
            SuggestedResourceIds = suggestedResourceIds;
            SuggestedAccessRules = suggestedAccessRules;
        }

        /// <summary> Name of the provisioning issue. </summary>
        public string Name { get; }
        /// <summary> Issue type. </summary>
        public HybridComputeProvisioningIssueType? IssueType { get; }
        /// <summary> Severity of the provisioning issue. </summary>
        public HybridComputeProvisioningIssueSeverity? Severity { get; }
        /// <summary> Description of the provisioning issue. </summary>
        public string Description { get; }
        /// <summary> ARM Ids of the resources that can be associated to the same perimeter to remediate the issue. </summary>
        public IReadOnlyList<ResourceIdentifier> SuggestedResourceIds { get; }
        /// <summary> Access rules that can be added to the perimeter to remediate the issue. </summary>
        public IReadOnlyList<HybridComputeAccessRule> SuggestedAccessRules { get; }
    }
}
