// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Describes a License Update. </summary>
    public partial class HybridComputeLicensePatch : HybridComputeResourceUpdate
    {
        /// <summary> Initializes a new instance of <see cref="HybridComputeLicensePatch"/>. </summary>
        public HybridComputeLicensePatch()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HybridComputeLicensePatch"/>. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="licenseType"> The type of the license resource. </param>
        /// <param name="state"> Describes the state of the license. </param>
        /// <param name="target"> Describes the license target server. </param>
        /// <param name="edition"> Describes the edition of the license. The values are either Standard or Datacenter. </param>
        /// <param name="hybridComputeLicenseCoreType"> Describes the license core type (pCore or vCore). </param>
        /// <param name="processors"> Describes the number of processors. </param>
        internal HybridComputeLicensePatch(IDictionary<string, string> tags, HybridComputeLicenseType? licenseType, HybridComputeLicenseState? state, HybridComputeLicenseTarget? target, HybridComputeLicenseEdition? edition, HybridComputeLicenseCoreType? hybridComputeLicenseCoreType, int? processors) : base(tags)
        {
            LicenseType = licenseType;
            State = state;
            Target = target;
            Edition = edition;
            HybridComputeLicenseCoreType = hybridComputeLicenseCoreType;
            Processors = processors;
        }

        /// <summary> The type of the license resource. </summary>
        public HybridComputeLicenseType? LicenseType { get; set; }
        /// <summary> Describes the state of the license. </summary>
        public HybridComputeLicenseState? State { get; set; }
        /// <summary> Describes the license target server. </summary>
        public HybridComputeLicenseTarget? Target { get; set; }
        /// <summary> Describes the edition of the license. The values are either Standard or Datacenter. </summary>
        public HybridComputeLicenseEdition? Edition { get; set; }
        /// <summary> Describes the license core type (pCore or vCore). </summary>
        public HybridComputeLicenseCoreType? HybridComputeLicenseCoreType { get; set; }
        /// <summary> Describes the number of processors. </summary>
        public int? Processors { get; set; }
    }
}
