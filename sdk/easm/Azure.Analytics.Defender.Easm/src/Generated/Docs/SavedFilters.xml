<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSavedFiltersAsync(string,int?,int?,CancellationToken)">
<example>
This sample shows how to call GetSavedFiltersAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var result = await client.GetSavedFiltersAsync("<filter>", 1234, 1234);
]]></code>
</example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,CancellationToken)">
<example>
This sample shows how to call GetSavedFilters with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var result = client.GetSavedFilters("<filter>", 1234, 1234);
]]></code>
</example>
    </member>
    <member name="GetSavedFiltersAsync(string,int?,int?,RequestContext)">
<example>
This sample shows how to call GetSavedFiltersAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = await client.GetSavedFiltersAsync("<filter>", 1234, 1234, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="GetSavedFilters(string,int?,int?,RequestContext)">
<example>
This sample shows how to call GetSavedFilters with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = client.GetSavedFilters("<filter>", 1234, 1234, new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("totalElements").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="GetSavedFilterAsync(string,CancellationToken)">
<example>
This sample shows how to call GetSavedFilterAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var result = await client.GetSavedFilterAsync("<filterName>");
]]></code>
</example>
    </member>
    <member name="GetSavedFilter(string,CancellationToken)">
<example>
This sample shows how to call GetSavedFilter with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var result = client.GetSavedFilter("<filterName>");
]]></code>
</example>
    </member>
    <member name="GetSavedFilterAsync(string,RequestContext)">
<example>
This sample shows how to call GetSavedFilterAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = await client.GetSavedFilterAsync("<filterName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="GetSavedFilter(string,RequestContext)">
<example>
This sample shows how to call GetSavedFilter with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = client.GetSavedFilter("<filterName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="PutAsync(string,SavedFilterData,CancellationToken)">
<example>
This sample shows how to call PutAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var savedFilterData = new SavedFilterData("<filter>", "<description>");
var result = await client.PutAsync("<filterName>", savedFilterData);
]]></code>
</example>
    </member>
    <member name="Put(string,SavedFilterData,CancellationToken)">
<example>
This sample shows how to call Put with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var savedFilterData = new SavedFilterData("<filter>", "<description>");
var result = client.Put("<filterName>", savedFilterData);
]]></code>
</example>
    </member>
    <member name="PutAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call PutAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var data = new {
    filter = "<filter>",
    description = "<description>",
};

Response response = await client.PutAsync("<filterName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="Put(string,RequestContent,RequestContext)">
<example>
This sample shows how to call Put with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

var data = new {
    filter = "<filter>",
    description = "<description>",
};

Response response = client.Put("<filterName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("filter").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = await client.DeleteAsync("<filterName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new EasmDefenderClient(endpoint, credential).GetSavedFiltersClient("<subscriptionId>", "<resourceGroupName>", "<workspaceName>", "2023-03-01-preview");

Response response = client.Delete("<filterName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>