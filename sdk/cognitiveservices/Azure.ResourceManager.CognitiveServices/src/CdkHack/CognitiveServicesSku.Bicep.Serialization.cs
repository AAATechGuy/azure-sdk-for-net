// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text;
using Azure.Core;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.CognitiveServices.Models
{
    public partial class CognitiveServicesSku
    {
        BinaryData global::System.ClientModel.Primitives.IPersistableModel<CognitiveServicesSku>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<ResourceGroupData>)this).GetFormatFromOptions(options) : options.Format;

            switch (format)
            {
                case "J":
                    return ModelReaderWriter.Write(this, options);
                case "bicep":
                    return SerializeBicep(options);
                default:
                    throw new FormatException($"The model {nameof(ResourceGroupData)} does not support '{options.Format}' format.");
            }
        }

        private BinaryData SerializeBicep(ModelReaderWriterOptions options)
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine($"  name: '{Name}'");
            if (Optional.IsDefined(Tier))
            {
                sb.AppendLine($"  tier: '{Tier.Value}'");
            }
            if (Optional.IsDefined(Capacity))
            {
                sb.AppendLine($"  capacity: {Capacity.Value}");
            }
            if (Optional.IsDefined(Family))
            {
                sb.AppendLine($"  family: '{Family}'");
            }
            if (Optional.IsDefined(Size))
            {
                sb.AppendLine($"  size: '{Size}'");
            }
            return BinaryData.FromString(sb.ToString());
        }
    }
}
