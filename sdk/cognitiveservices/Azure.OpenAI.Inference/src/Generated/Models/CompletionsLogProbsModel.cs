// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.OpenAI.Inference.Models
{
    /// <summary> LogProbs model within completion choice. </summary>
    public partial class CompletionsLogProbsModel
    {
        /// <summary> Initializes a new instance of CompletionsLogProbsModel. </summary>
        internal CompletionsLogProbsModel()
        {
            Tokens = new ChangeTrackingList<string>();
            Token_logprobs = new ChangeTrackingList<float>();
            Top_logprobs = new ChangeTrackingList<IDictionary<string, float>>();
            Text_offset = new ChangeTrackingList<int>();
        }

        /// <summary> Initializes a new instance of CompletionsLogProbsModel. </summary>
        /// <param name="tokens"></param>
        /// <param name="token_logprobs"></param>
        /// <param name="top_logprobs"></param>
        /// <param name="text_offset"></param>
        internal CompletionsLogProbsModel(IReadOnlyList<string> tokens, IReadOnlyList<float> token_logprobs, IReadOnlyList<IDictionary<string, float>> top_logprobs, IReadOnlyList<int> text_offset)
        {
            Tokens = tokens.ToList();
            Token_logprobs = tokenLogprobs.ToList();
            Top_logprobs = topLogprobs.ToList();
            Text_offset = textOffset.ToList();
        }

        /// <summary> Gets the tokens. </summary>
        public IReadOnlyList<string> Tokens { get; }
        /// <summary> Gets the token logprobs. </summary>
        public IReadOnlyList<float> Token_logprobs { get; }
        /// <summary> Gets the top logprobs. </summary>
        public IReadOnlyList<IDictionary<string, float>> Top_logprobs { get; }
        /// <summary> Gets the text offset. </summary>
        public IReadOnlyList<int> Text_offset { get; }
    }
}
