// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.OpenAI.Inference.Models
{
    public partial class CompletionsCreateBody : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Prompt))
            {
                writer.WritePropertyName("prompt");
                writer.WriteObjectValue(Prompt);
            }
            if (Optional.IsDefined(Max_tokens))
            {
                if (Max_tokens != null)
                {
                    writer.WritePropertyName("max_tokens");
                    writer.WriteNumberValue(Max_tokens.Value);
                }
                else
                {
                    writer.WriteNull("max_tokens");
                }
            }
            if (Optional.IsDefined(Temperature))
            {
                if (Temperature != null)
                {
                    writer.WritePropertyName("temperature");
                    writer.WriteNumberValue(Temperature.Value);
                }
                else
                {
                    writer.WriteNull("temperature");
                }
            }
            if (Optional.IsDefined(Top_p))
            {
                if (Top_p != null)
                {
                    writer.WritePropertyName("top_p");
                    writer.WriteNumberValue(Top_p.Value);
                }
                else
                {
                    writer.WriteNull("top_p");
                }
            }
            if (Optional.IsDefined(Logit_bias))
            {
                writer.WritePropertyName("logit_bias");
                writer.WriteObjectValue(Logit_bias);
            }
            if (Optional.IsDefined(User))
            {
                writer.WritePropertyName("user");
                writer.WriteStringValue(User);
            }
            if (Optional.IsDefined(N))
            {
                if (N != null)
                {
                    writer.WritePropertyName("n");
                    writer.WriteNumberValue(N.Value);
                }
                else
                {
                    writer.WriteNull("n");
                }
            }
            if (Optional.IsDefined(Stream))
            {
                if (Stream != null)
                {
                    writer.WritePropertyName("stream");
                    writer.WriteBooleanValue(Stream.Value);
                }
                else
                {
                    writer.WriteNull("stream");
                }
            }
            if (Optional.IsDefined(Logprobs))
            {
                if (Logprobs != null)
                {
                    writer.WritePropertyName("logprobs");
                    writer.WriteNumberValue(Logprobs.Value);
                }
                else
                {
                    writer.WriteNull("logprobs");
                }
            }
            if (Optional.IsDefined(Model))
            {
                writer.WritePropertyName("model");
                writer.WriteStringValue(Model);
            }
            if (Optional.IsDefined(Echo))
            {
                if (Echo != null)
                {
                    writer.WritePropertyName("echo");
                    writer.WriteBooleanValue(Echo.Value);
                }
                else
                {
                    writer.WriteNull("echo");
                }
            }
            if (Optional.IsDefined(Stop))
            {
                writer.WritePropertyName("stop");
                writer.WriteObjectValue(Stop);
            }
            if (Optional.IsDefined(Completion_config))
            {
                writer.WritePropertyName("completion_config");
                writer.WriteStringValue(Completion_config);
            }
            if (Optional.IsDefined(Cache_level))
            {
                if (Cache_level != null)
                {
                    writer.WritePropertyName("cache_level");
                    writer.WriteNumberValue(Cache_level.Value);
                }
                else
                {
                    writer.WriteNull("cache_level");
                }
            }
            if (Optional.IsDefined(Presence_penalty))
            {
                if (Presence_penalty != null)
                {
                    writer.WritePropertyName("presence_penalty");
                    writer.WriteNumberValue(Presence_penalty.Value);
                }
                else
                {
                    writer.WriteNull("presence_penalty");
                }
            }
            if (Optional.IsDefined(Frequency_penalty))
            {
                if (Frequency_penalty != null)
                {
                    writer.WritePropertyName("frequency_penalty");
                    writer.WriteNumberValue(Frequency_penalty.Value);
                }
                else
                {
                    writer.WriteNull("frequency_penalty");
                }
            }
            if (Optional.IsDefined(Best_of))
            {
                if (Best_of != null)
                {
                    writer.WritePropertyName("best_of");
                    writer.WriteNumberValue(Best_of.Value);
                }
                else
                {
                    writer.WriteNull("best_of");
                }
            }
            writer.WriteEndObject();
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
