// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CodeSigning.Models
{
    /// <summary> Properties of the certificate. </summary>
    public partial class CodeSigningCertificate
    {
        /// <summary> Initializes a new instance of CodeSigningCertificate. </summary>
        public CodeSigningCertificate()
        {
            Revocations = new ChangeTrackingList<CertificateRevocation>();
        }

        /// <summary> Initializes a new instance of CodeSigningCertificate. </summary>
        /// <param name="serialNumber"> Serial number of the certificate. </param>
        /// <param name="subjectName"> Subject name of the certificate. </param>
        /// <param name="thumbprint"> Thumbprint of the certificate. </param>
        /// <param name="createdOn"> Certificate created date. </param>
        /// <param name="expireOn"> Certificate expiry date. </param>
        /// <param name="status"> Status of the certificate. </param>
        /// <param name="revocations"></param>
        internal CodeSigningCertificate(string serialNumber, string subjectName, string thumbprint, DateTimeOffset? createdOn, DateTimeOffset? expireOn, CodeSigningCertificateStatus? status, IList<CertificateRevocation> revocations)
        {
            SerialNumber = serialNumber;
            SubjectName = subjectName;
            Thumbprint = thumbprint;
            CreatedOn = createdOn;
            ExpireOn = expireOn;
            Status = status;
            Revocations = revocations;
        }

        /// <summary> Serial number of the certificate. </summary>
        public string SerialNumber { get; set; }
        /// <summary> Subject name of the certificate. </summary>
        public string SubjectName { get; set; }
        /// <summary> Thumbprint of the certificate. </summary>
        public string Thumbprint { get; set; }
        /// <summary> Certificate created date. </summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary> Certificate expiry date. </summary>
        public DateTimeOffset? ExpireOn { get; set; }
        /// <summary> Status of the certificate. </summary>
        public CodeSigningCertificateStatus? Status { get; set; }
        /// <summary> Gets the revocations. </summary>
        public IList<CertificateRevocation> Revocations { get; }
    }
}
