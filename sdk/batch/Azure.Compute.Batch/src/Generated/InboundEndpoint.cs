// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Compute.Batch
{
    /// <summary> An inbound endpoint on a Compute Node. </summary>
    public partial class InboundEndpoint
    {
        /// <summary> Initializes a new instance of InboundEndpoint. </summary>
        /// <param name="name"> The name of the endpoint. </param>
        /// <param name="protocol"> The protocol of the endpoint. </param>
        /// <param name="publicIpAddress"> The public IP address of the Compute Node. </param>
        /// <param name="publicFQDN"> The public fully qualified domain name for the Compute Node. </param>
        /// <param name="frontendPort"> The public port number of the endpoint. </param>
        /// <param name="backendPort"> The backend port number of the endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="publicIpAddress"/> or <paramref name="publicFQDN"/> is null. </exception>
        internal InboundEndpoint(string name, InboundEndpointProtocol protocol, string publicIpAddress, string publicFQDN, int frontendPort, int backendPort)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(publicIpAddress, nameof(publicIpAddress));
            Argument.AssertNotNull(publicFQDN, nameof(publicFQDN));

            Name = name;
            Protocol = protocol;
            PublicIpAddress = publicIpAddress;
            PublicFQDN = publicFQDN;
            FrontendPort = frontendPort;
            BackendPort = backendPort;
        }

        /// <summary> The name of the endpoint. </summary>
        public string Name { get; }
        /// <summary> The protocol of the endpoint. </summary>
        public InboundEndpointProtocol Protocol { get; }
        /// <summary> The public IP address of the Compute Node. </summary>
        public string PublicIpAddress { get; }
        /// <summary> The public fully qualified domain name for the Compute Node. </summary>
        public string PublicFQDN { get; }
        /// <summary> The public port number of the endpoint. </summary>
        public int FrontendPort { get; }
        /// <summary> The backend port number of the endpoint. </summary>
        public int BackendPort { get; }
    }
}
