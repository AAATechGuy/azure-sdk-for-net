// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Compute.Batch
{
    /// <summary> Execution constraints to apply to a Task. </summary>
    public partial class TaskConstraints
    {
        /// <summary> Initializes a new instance of TaskConstraints. </summary>
        public TaskConstraints()
        {
        }

        /// <summary> Initializes a new instance of TaskConstraints. </summary>
        /// <param name="maxWallClockTime"> The maximum elapsed time that the Task may run, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. If this is not specified, there is no time limit on how long the Task may run. </param>
        /// <param name="retentionTime"> The minimum time to retain the Task directory on the Compute Node where it ran, from the time it completes execution. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted. </param>
        /// <param name="maxTaskRetryCount"> The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries for the Task executable due to a nonzero exit code. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task after the first attempt. If the maximum retry count is -1, the Batch service retries the Task without limit, however this is not recommended for a start task or any task. The default value is 0 (no retries). </param>
        internal TaskConstraints(TimeSpan? maxWallClockTime, TimeSpan? retentionTime, int? maxTaskRetryCount)
        {
            MaxWallClockTime = maxWallClockTime;
            RetentionTime = retentionTime;
            MaxTaskRetryCount = maxTaskRetryCount;
        }

        /// <summary> The maximum elapsed time that the Task may run, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. If this is not specified, there is no time limit on how long the Task may run. </summary>
        public TimeSpan? MaxWallClockTime { get; set; }
        /// <summary> The minimum time to retain the Task directory on the Compute Node where it ran, from the time it completes execution. After this time, the Batch service may delete the Task directory and all its contents. The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted. </summary>
        public TimeSpan? RetentionTime { get; set; }
        /// <summary> The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries for the Task executable due to a nonzero exit code. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task after the first attempt. If the maximum retry count is -1, the Batch service retries the Task without limit, however this is not recommended for a start task or any task. The default value is 0 (no retries). </summary>
        public int? MaxTaskRetryCount { get; set; }
    }
}
