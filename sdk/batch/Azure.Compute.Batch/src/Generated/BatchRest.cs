// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Compute.Batch;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.Compute.Batch.Customizations
{
    // Data plane generated client. The Batch service client.
    /// <summary> The Batch service client. </summary>
    internal partial class BatchRest
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://batch.core.windows.net/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of BatchRest for mocking. </summary>
        protected BatchRest()
        {
        }

        /// <summary> Initializes a new instance of BatchRest. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public BatchRest(TokenCredential credential) : this(credential, new BatchClientOptions())
        {
        }

        /// <summary> Initializes a new instance of BatchRest. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public BatchRest(TokenCredential credential, BatchClientOptions options)
        {
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new BatchClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
        }

        /// <summary> Initializes a new instance of ApplicationRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual ApplicationRest GetApplicationRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ApplicationRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of PoolRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual PoolRest GetPoolRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new PoolRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of AccountRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual AccountRest GetAccountRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new AccountRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of JobRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual JobRest GetJobRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new JobRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of CertificateRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual CertificateRest GetCertificateRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new CertificateRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of FileRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual FileRest GetFileRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new FileRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of JobScheduleRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual JobScheduleRest GetJobScheduleRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new JobScheduleRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of TaskRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual TaskRest GetTaskRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new TaskRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of ComputeNodeRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual ComputeNodeRest GetComputeNodeRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ComputeNodeRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }

        /// <summary> Initializes a new instance of ComputeNodeExtensionRest. </summary>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        /// <param name="apiVersion"> Api Version. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="batchUrl"/> or <paramref name="apiVersion"/> is null. </exception>
        public virtual ComputeNodeExtensionRest GetComputeNodeExtensionRestClient(string batchUrl, string apiVersion = "2022-01-01.15.0")
        {
            Argument.AssertNotNull(batchUrl, nameof(batchUrl));
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ComputeNodeExtensionRest(ClientDiagnostics, _pipeline, _tokenCredential, batchUrl, apiVersion);
        }
    }
}
