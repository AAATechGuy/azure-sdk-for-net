// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Buffers;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    public partial class ResourceGroupData : ISerializable<ResourceGroupData>
    {
        internal ResourceGroupData(): base()
        {
        }

        bool ISerializable<ResourceGroupData>.TryDeserialize(ReadOnlySpan<byte> data, out int bytesConsumed, StandardFormat format)
        {
            using var document = JsonDocument.Parse(data.ToString());
            Deserialize(document.RootElement);
            bytesConsumed = data.Length;
            return true;
        }

        bool ISerializable<ResourceGroupData>.TrySerialize(Span<byte> buffer, out int bytesWritten, StandardFormat format)
        {
            var writer = new Utf8JsonWriter(new MemoryStream(buffer.ToArray()));
            ((IUtf8JsonSerializable)this).Write(writer);
            bytesWritten = buffer.Length;
            return true;
        }

        /// <summary> Deserializes a <see cref="JsonElement"/> to a <see cref="ResourceGroupData"/>. </summary>
        private new void Deserialize(JsonElement element)
        {
            base.Deserialize(element);
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Properties = ResourceGroupProperties.DeserializeResourceGroupProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("managedBy"))
                {
                    ManagedBy = property.Value.GetString();
                    continue;
                }
            }
        }
    }
}
