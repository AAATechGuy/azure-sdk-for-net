// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Buffers;
using System.IO;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    public partial class ManagementLockData : ISerializable
    {
        /// <summary> Initializes a new instance of ManagementLockData. </summary>
        public ManagementLockData()
        {
        }

        bool ISerializable.TryDeserialize(Stream data, out int bytesConsumed, StandardFormat format)
        {
            using var document = JsonDocument.Parse(BinaryData.FromStream(data).ToString());
            var model = ManagementLockData.DeserializeManagementLockData(document.RootElement);
            bytesConsumed = (int)data.Length;
            return true;
        }

        bool ISerializable.TrySerialize(Stream buffer, out int bytesWritten, StandardFormat format)
        {
            var writer = new Utf8JsonWriter(buffer);
            ((IUtf8JsonSerializable)this).Write(writer);
            bytesWritten = (int)buffer.Length;
            return true;
        }

        /// <summary> Deserializes a <see cref="JsonElement"/> to an instance of <see cref="ManagementLockData"/>. </summary>
        private new void Deserialize(JsonElement element)
        {
            base.Deserialize(element);
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("level"))
                        {
                            Level = new ManagementLockLevel(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("notes"))
                        {
                            Notes = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("owners"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                Owners.Add(ManagementLockOwner.DeserializeManagementLockOwner(item));
                            }
                            continue;
                        }
                    }
                    continue;
                }
            }
        }
    }
}
