// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core;

namespace Azure.Developer.DevCenter.Models
{
    /// <summary> Properties of an environment. </summary>
    public partial class DevCenterEnvironment
    {
        /// <summary> Initializes a new instance of DevCenterEnvironment. </summary>
        /// <param name="environmentType"> Environment type. </param>
        /// <param name="catalogName"> Name of the catalog. </param>
        /// <param name="environmentDefinitionName"> Name of the environment definition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="environmentType"/>, <paramref name="catalogName"/> or <paramref name="environmentDefinitionName"/> is null. </exception>
        public DevCenterEnvironment(string environmentType, string catalogName, string environmentDefinitionName)
        {
            Argument.AssertNotNull(environmentType, nameof(environmentType));
            Argument.AssertNotNull(catalogName, nameof(catalogName));
            Argument.AssertNotNull(environmentDefinitionName, nameof(environmentDefinitionName));

            EnvironmentType = environmentType;
            CatalogName = catalogName;
            EnvironmentDefinitionName = environmentDefinitionName;
        }

        /// <summary> Initializes a new instance of DevCenterEnvironment. </summary>
        /// <param name="parameters"> Parameters object for the environment. </param>
        /// <param name="name"> Environment name. </param>
        /// <param name="environmentType"> Environment type. </param>
        /// <param name="user"> The AAD object id of the owner of this Environment. </param>
        /// <param name="provisioningState"> The provisioning state of the environment. </param>
        /// <param name="resourceGroupId"> The identifier of the resource group containing the environment's resources. </param>
        /// <param name="catalogName"> Name of the catalog. </param>
        /// <param name="environmentDefinitionName"> Name of the environment definition. </param>
        /// <param name="error"> Provisioning error details. Populated only for error states. </param>
        internal DevCenterEnvironment(BinaryData parameters, string name, string environmentType, string user, string provisioningState, string resourceGroupId, string catalogName, string environmentDefinitionName, ResponseError error)
        {
            Parameters = parameters;
            Name = name;
            EnvironmentType = environmentType;
            User = user;
            ProvisioningState = provisioningState;
            ResourceGroupId = resourceGroupId;
            CatalogName = catalogName;
            EnvironmentDefinitionName = environmentDefinitionName;
            Error = error;
        }

        /// <summary>
        /// Parameters object for the environment.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Parameters { get; set; }
        /// <summary> Environment name. </summary>
        public string Name { get; }
        /// <summary> Environment type. </summary>
        public string EnvironmentType { get; set; }
        /// <summary> The AAD object id of the owner of this Environment. </summary>
        public string User { get; }
        /// <summary> The provisioning state of the environment. </summary>
        public string ProvisioningState { get; }
        /// <summary> The identifier of the resource group containing the environment's resources. </summary>
        public string ResourceGroupId { get; }
        /// <summary> Name of the catalog. </summary>
        public string CatalogName { get; set; }
        /// <summary> Name of the environment definition. </summary>
        public string EnvironmentDefinitionName { get; set; }
        /// <summary> Provisioning error details. Populated only for error states. </summary>
        public ResponseError Error { get; }
    }
}
