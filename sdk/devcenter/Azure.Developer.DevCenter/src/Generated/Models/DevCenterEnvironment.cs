// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core;

namespace Azure.Developer.DevCenter.Models
{
    /// <summary> Properties of an environment. </summary>
    public partial class DevCenterEnvironment
    {
        /// <summary> Initializes a new instance of <see cref="DevCenterEnvironment"/>. </summary>
        /// <param name="environmentTypeName"> Environment type. </param>
        /// <param name="catalogName"> Name of the catalog. </param>
        /// <param name="environmentDefinitionName"> Name of the environment definition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="environmentTypeName"/>, <paramref name="catalogName"/> or <paramref name="environmentDefinitionName"/> is null. </exception>
        public DevCenterEnvironment(string environmentTypeName, string catalogName, string environmentDefinitionName)
        {
            Argument.AssertNotNull(environmentTypeName, nameof(environmentTypeName));
            Argument.AssertNotNull(catalogName, nameof(catalogName));
            Argument.AssertNotNull(environmentDefinitionName, nameof(environmentDefinitionName));

            EnvironmentTypeName = environmentTypeName;
            CatalogName = catalogName;
            EnvironmentDefinitionName = environmentDefinitionName;
        }

        /// <summary> Initializes a new instance of <see cref="DevCenterEnvironment"/>. </summary>
        /// <param name="parameters"> Parameters object for the environment. </param>
        /// <param name="name"> Environment name. </param>
        /// <param name="environmentTypeName"> Environment type. </param>
        /// <param name="userId"> The AAD object id of the owner of this Environment. </param>
        /// <param name="provisioningState"> The provisioning state of the environment. </param>
        /// <param name="resourceGroupId"> The identifier of the resource group containing the environment's resources. </param>
        /// <param name="catalogName"> Name of the catalog. </param>
        /// <param name="environmentDefinitionName"> Name of the environment definition. </param>
        /// <param name="error"> Provisioning error details. Populated only for error states. </param>
        internal DevCenterEnvironment(BinaryData parameters, string name, string environmentTypeName, Guid? userId, EnvironmentProvisioningState? provisioningState, ResourceIdentifier resourceGroupId, string catalogName, string environmentDefinitionName, ResponseError error)
        {
            Parameters = parameters;
            Name = name;
            EnvironmentTypeName = environmentTypeName;
            UserId = userId;
            ProvisioningState = provisioningState;
            ResourceGroupId = resourceGroupId;
            CatalogName = catalogName;
            EnvironmentDefinitionName = environmentDefinitionName;
            Error = error;
        }

        /// <summary>
        /// Parameters object for the environment.
        /// <para>
        /// To assign a byte[] to this property use <see cref="BinaryData.FromBytes(byte[])"/>.
        /// The byte[] will be serialized to a Base64 encoded string.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromBytes(new byte[] { 1, 2, 3 })</term>
        /// <description>Creates a payload of "AQID".</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Parameters { get; set; }
        /// <summary> Environment name. </summary>
        public string Name { get; }
        /// <summary> Environment type. </summary>
        public string EnvironmentTypeName { get; set; }
        /// <summary> The AAD object id of the owner of this Environment. </summary>
        public Guid? UserId { get; }
        /// <summary> The provisioning state of the environment. </summary>
        public EnvironmentProvisioningState? ProvisioningState { get; }
        /// <summary> Name of the catalog. </summary>
        public string CatalogName { get; set; }
        /// <summary> Name of the environment definition. </summary>
        public string EnvironmentDefinitionName { get; set; }
        /// <summary> Provisioning error details. Populated only for error states. </summary>
        public ResponseError Error { get; }
    }
}
